version: '3'


services:
  postgres:
    image: postgres:12.2-alpine
    ports:
      - 5432:5432
    networks:
      - backend_network
    volumes:
      - ./services/database/docker/postgres/init.d:/docker-entrypoint-initdb.d
      - postgres_volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_DB: backend_db
      PGDATA: /var/lib/postgresql/data/pgdata
    hostname: postgres
    restart: always
    user: root

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    ports:
      - 81:80
    networks:
      - backend_network
    environment:
      PGADMIN_DEFAULT_EMAIL: nestjs@example.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - ./services/database/docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

  frontend:
    image: node:17-alpine
    volumes:
      - ./services/frontend/srcs:/app
    networks:
      - backend_network
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm run start"
    # command: sh -c "tail -f /dev/null"
    ports:
      - '3000:3000'

  backend:
    image: node:17-alpine
    volumes:
      - ./services/backend/srcs:/app
    networks:
      - backend_network
    working_dir: /app
    command: sh -c "npm install --legacy-peer-deps && npm run start:dev"
    # command: sh -c "tail -f /dev/null"
    ports:
      - '3001:3001'
      


networks:
  backend_network:


volumes:
  postgres_volume:
