{"ast":null,"code":"var _jsxFileName = \"/Users/r_tomishi/Desktop/42Tokyo/ft_transcendence/LocalDevelopment/frondend/src/providers/LoginPlayerProvider.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const LoginPlayerContext = /*#__PURE__*/createContext({});\nexport const LoginPlayerProvider = props => {\n  _s();\n\n  const {\n    children\n  } = props;\n  const [loginPlayer, setLoginPlayer] = useState(null);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LoginPlayerContext.Provider, {\n      value: {\n        loginPlayer,\n        setLoginPlayer\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginPlayerProvider, \"KSV1enffa/Df+fMZtLkaGPR0QhY=\");\n\n_c = LoginPlayerProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPlayerProvider\");","map":{"version":3,"sources":["/Users/r_tomishi/Desktop/42Tokyo/ft_transcendence/LocalDevelopment/frondend/src/providers/LoginPlayerProvider.tsx"],"names":["createContext","useState","LoginPlayerContext","LoginPlayerProvider","props","children","loginPlayer","setLoginPlayer"],"mappings":";;;AAAA,SACCA,aADD,EAKCC,QALD,QAMO,OANP;;;AAiBA,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAC9C,EAD8C,CAAxC;AAIP,OAAO,MAAMG,mBAAmB,GAAIC,KAAD,IAAoC;AAAA;;AACtE,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAqB,IAArB,CAA9C;AAEA,sBACC;AAAA,2BACC,QAAC,kBAAD,CAAoB,QAApB;AACC,MAAA,KAAK,EAAE;AAAEK,QAAAA,WAAF;AAAeC,QAAAA;AAAf,OADR;AAAA,gBAGEF;AAHF;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AASA,CAbM;;GAAMF,mB;;KAAAA,mB","sourcesContent":["import {\n\tcreateContext,\n\tDispatch,\n\tSetStateAction,\n\tReactNode,\n\tuseState,\n} from \"react\";\n\nimport { Player } from \"../types/api/Player\";\n\ntype LoginPlayer = Player;\n\nexport type LoginPlayerContextType = {\n\tloginPlayer: LoginPlayer | null;\n\tsetLoginPlayer: Dispatch<SetStateAction<LoginPlayer | null>>;\n};\n\nexport const LoginPlayerContext = createContext<LoginPlayerContextType>(\n\t{} as LoginPlayerContextType\n);\n\nexport const LoginPlayerProvider = (props: { children: ReactNode }) => {\n\tconst { children } = props;\n\tconst [loginPlayer, setLoginPlayer] = useState<LoginPlayer | null>(null);\n\n\treturn (\n\t\t<>\n\t\t\t<LoginPlayerContext.Provider\n\t\t\t\tvalue={{ loginPlayer, setLoginPlayer }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</LoginPlayerContext.Provider>\n\t\t</>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}