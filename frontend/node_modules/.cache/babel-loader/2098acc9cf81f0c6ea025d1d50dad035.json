{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"..//hooks/useLoginPlayer\";\nexport const useAuth = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    setLoginPlayer\n  } = useLoginPlayer();\n  const [loading, setLoading] = useState(false);\n  const login = useCallback((name, password) => {\n    setLoading(true); //\t\t\taxios\n    //\t\t\t\t.get<Player>(`http:///localhost:3001/players/${name}`)\n    //\t\t\t\t.then((res) => {\n    //\t\t\t\t\tif (res.data.password === password) {\n    //\t\t\t\t\t\tsetLoginPlayer({ ...res.data });\n    //\t\t\t\t\t\tshowMessage({\n    //\t\t\t\t\t\t\ttitle: \"Sign In Successful\",\n    //\t\t\t\t\t\t\tstatus: \"success\",\n    //\t\t\t\t\t\t});\n    //\t\t\t\t\t\tnavigate(\"/home\");\n    //\t\t\t\t\t} else {\n    //\t\t\t\t\t\tshowMessage({\n    //\t\t\t\t\t\t\ttitle: \"That Password is wrong.\",\n    //\t\t\t\t\t\t\tstatus: \"error\",\n    //\t\t\t\t\t\t});\n    //\t\t\t\t\t}\n    //\t\t\t\t})\n    //\t\t\t\t.catch(() => {\n    //\t\t\t\t\tshowMessage({\n    //\t\t\t\t\t\ttitle: \"That User Name not found or Server Error Occured.\",\n    //\t\t\t\t\t\tstatus: \"error\",\n    //\t\t\t\t\t});\n    //\t\t\t\t})\n    //\t\t\t\t.finally(() => setLoading(false));\n    //\t\t},\n    //\t\t[navigate, showMessage, setLoginPlayer, setLoading]\n\n    setLoading(false);\n    navigate(\"/home\");\n  }, []);\n  return {\n    login,\n    loading\n  };\n};\n\n_s(useAuth, \"WS6nbAfJVps1XXrR1qeVeh7/Uy8=\", false, function () {\n  return [useNavigate, useMessage, useLoginPlayer];\n});","map":{"version":3,"sources":["/Users/r_tomishi/Desktop/42Tokyo/ft_transcendence/LocalDevelopment/frondend/src/hooks/useAuth.ts"],"names":["useCallback","useState","useNavigate","useMessage","useLoginPlayer","useAuth","navigate","showMessage","setLoginPlayer","loading","setLoading","login","name","password"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAqBJ,cAAc,EAAzC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMU,KAAK,GAAGX,WAAW,CAAC,CAACY,IAAD,EAAeC,QAAf,KAAoC;AAC7DH,IAAAA,UAAU,CAAC,IAAD,CAAV,CAD6D,CAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACA,GA9BwB,EA8BtB,EA9BsB,CAAzB;AA+BA,SAAO;AACNK,IAAAA,KADM;AAENF,IAAAA;AAFM,GAAP;AAIA,CA1CM;;GAAMJ,O;UACKH,W,EACOC,U,EACGC,c","sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { Player } from \"../types/api/Player\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"..//hooks/useLoginPlayer\";\n\nexport const useAuth = () => {\n\tconst navigate = useNavigate();\n\tconst { showMessage } = useMessage();\n\tconst { setLoginPlayer } = useLoginPlayer();\n\n\tconst [loading, setLoading] = useState(false);\n\n\tconst login = useCallback((name: string, password: string) => {\n\t\tsetLoading(true);\n\t\t//\t\t\taxios\n\t\t//\t\t\t\t.get<Player>(`http:///localhost:3001/players/${name}`)\n\t\t//\t\t\t\t.then((res) => {\n\t\t//\t\t\t\t\tif (res.data.password === password) {\n\t\t//\t\t\t\t\t\tsetLoginPlayer({ ...res.data });\n\t\t//\t\t\t\t\t\tshowMessage({\n\t\t//\t\t\t\t\t\t\ttitle: \"Sign In Successful\",\n\t\t//\t\t\t\t\t\t\tstatus: \"success\",\n\t\t//\t\t\t\t\t\t});\n\t\t//\t\t\t\t\t\tnavigate(\"/home\");\n\t\t//\t\t\t\t\t} else {\n\t\t//\t\t\t\t\t\tshowMessage({\n\t\t//\t\t\t\t\t\t\ttitle: \"That Password is wrong.\",\n\t\t//\t\t\t\t\t\t\tstatus: \"error\",\n\t\t//\t\t\t\t\t\t});\n\t\t//\t\t\t\t\t}\n\t\t//\t\t\t\t})\n\t\t//\t\t\t\t.catch(() => {\n\t\t//\t\t\t\t\tshowMessage({\n\t\t//\t\t\t\t\t\ttitle: \"That User Name not found or Server Error Occured.\",\n\t\t//\t\t\t\t\t\tstatus: \"error\",\n\t\t//\t\t\t\t\t});\n\t\t//\t\t\t\t})\n\t\t//\t\t\t\t.finally(() => setLoading(false));\n\t\t//\t\t},\n\t\t//\t\t[navigate, showMessage, setLoginPlayer, setLoading]\n\t\tsetLoading(false);\n\t\tnavigate(\"/home\");\n\t}, []);\n\treturn {\n\t\tlogin,\n\t\tloading,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}