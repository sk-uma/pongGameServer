{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"./useLoginPlayer\";\nimport { use42User } from \"./use42User\";\nimport { useGetPlayer } from \"./useGetPlayer\";\nexport const useFtAuth = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    setLoginPlayer\n  } = useLoginPlayer();\n  const {\n    getFtUser,\n    FtUser\n  } = use42User();\n  const {\n    getPlayer,\n    player\n  } = useGetPlayer();\n  const [loadingFt, setLoadingFt] = useState(false);\n  const [searchParams] = useSearchParams();\n\n  function auth42() {\n    return new Promise(resolve => {\n      window.location.href = \"https://api.intra.42.fr/oauth/authorize?client_id=5ec7a9808358afbd8a4a174c7d89d4ae27fc87b35477bf1065cc11387df68549&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fhome&response_type=code\";\n    });\n  }\n\n  async function getCode() {\n    await auth42();\n  }\n\n  const loginFt = useCallback(async function sample() {\n    setLoadingFt(true);\n    await auth42(); //\t\tcode && getFtUser(code);\n    //\t\tFtUser && getPlayer(FtUser);\n    //\t\tplayer &&\n    //\t\t\tsetLoginPlayer(player) &&\n    //\t\t\tshowMessage({\n    //\t\t\t\ttitle: \"42 Authorization Successful\",\n    //\t\t\t\tstatus: \"success\",\n    //\t\t\t}) &&\n    //\t\t\tnavigate(\"/home\");\n\n    setLoadingFt(false);\n  }, []);\n  return {\n    loginFt,\n    loadingFt\n  };\n};\n\n_s(useFtAuth, \"VYdTBfMGOo/OwXlZgU1n8FcLPrc=\", false, function () {\n  return [useNavigate, useMessage, useLoginPlayer, useGetPlayer, useSearchParams];\n});","map":{"version":3,"sources":["/Users/r_tomishi/Desktop/42Tokyo/ft_transcendence/LocalDevelopment/frondend/src/hooks/useFtAuth.ts"],"names":["useCallback","useState","useNavigate","useSearchParams","useMessage","useLoginPlayer","use42User","useGetPlayer","useFtAuth","navigate","showMessage","setLoginPlayer","getFtUser","FtUser","getPlayer","player","loadingFt","setLoadingFt","searchParams","auth42","Promise","resolve","window","location","href","getCode","loginFt","sample"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AAGA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,kBAA7C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAkBN,UAAU,EAAlC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAqBN,cAAc,EAAzC;AACA,QAAM;AAAEO,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBP,SAAS,EAAvC;AACA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAwBR,YAAY,EAA1C;AAEA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACiB,YAAD,IAAiBf,eAAe,EAAtC;;AAEA,WAASgB,MAAT,GAAkB;AACjB,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC/BC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GACC,yLADD;AAEA,KAHM,CAAP;AAIA;;AAED,iBAAeC,OAAf,GAAyB;AACxB,UAAMN,MAAM,EAAZ;AACA;;AAED,QAAMO,OAAO,GAAG1B,WAAW,CAAC,eAAe2B,MAAf,GAAwB;AACnDV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAME,MAAM,EAAZ,CAFmD,CAInD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAF,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,GAd0B,EAcxB,EAdwB,CAA3B;AAeA,SAAO;AACNS,IAAAA,OADM;AAENV,IAAAA;AAFM,GAAP;AAIA,CAxCM;;GAAMR,S;UACKN,W,EACOE,U,EACGC,c,EAEGE,Y,EAGPJ,e","sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { Player } from \"../types/api/Player\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"./useLoginPlayer\";\nimport { use42User } from \"./use42User\";\nimport { useGetPlayer } from \"./useGetPlayer\";\n\nexport const useFtAuth = () => {\n\tconst navigate = useNavigate();\n\tconst { showMessage } = useMessage();\n\tconst { setLoginPlayer } = useLoginPlayer();\n\tconst { getFtUser, FtUser } = use42User();\n\tconst { getPlayer, player } = useGetPlayer();\n\n\tconst [loadingFt, setLoadingFt] = useState(false);\n\tconst [searchParams] = useSearchParams();\n\n\tfunction auth42() {\n\t\treturn new Promise((resolve) => {\n\t\t\twindow.location.href =\n\t\t\t\t\"https://api.intra.42.fr/oauth/authorize?client_id=5ec7a9808358afbd8a4a174c7d89d4ae27fc87b35477bf1065cc11387df68549&redirect_uri=http%3A%2F%2Flocalhost%3A3000%2Fhome&response_type=code\";\n\t\t});\n\t}\n\n\tasync function getCode() {\n\t\tawait auth42();\n\t}\n\n\tconst loginFt = useCallback(async function sample() {\n\t\tsetLoadingFt(true);\n\t\tawait auth42();\n\n\t\t//\t\tcode && getFtUser(code);\n\t\t//\t\tFtUser && getPlayer(FtUser);\n\t\t//\t\tplayer &&\n\t\t//\t\t\tsetLoginPlayer(player) &&\n\t\t//\t\t\tshowMessage({\n\t\t//\t\t\t\ttitle: \"42 Authorization Successful\",\n\t\t//\t\t\t\tstatus: \"success\",\n\t\t//\t\t\t}) &&\n\t\t//\t\t\tnavigate(\"/home\");\n\t\tsetLoadingFt(false);\n\t}, []);\n\treturn {\n\t\tloginFt,\n\t\tloadingFt,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}