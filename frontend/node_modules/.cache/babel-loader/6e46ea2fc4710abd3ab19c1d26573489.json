{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"..//hooks/useLoginPlayer\";\nexport const useAuth = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    showMessage\n  } = useMessage();\n  const {\n    setLoginPlayer\n  } = useLoginPlayer();\n  const [loading, setLoading] = useState(false);\n  const login = useCallback((name, password) => {\n    if (name !== \"\") {\n      axios.get(`http:///localhost:3001/players/${name}`).then(res => {\n        if (res.data.password === password) {\n          setLoginPlayer({ ...res.data\n          });\n          showMessage({\n            title: \"Sign In Successful\",\n            status: \"success\"\n          });\n          navigate(\"/home\");\n        } else {\n          showMessage({\n            title: \"That Password is wrong.\",\n            status: \"error\"\n          });\n          setLoading(false);\n        }\n      }).catch(() => {\n        showMessage({\n          title: \"That User Name not found or Server Error Occured.\",\n          status: \"error\"\n        });\n        setLoading(false);\n      });\n    } else {\n      showMessage({\n        title: \"Input User Name and Password!\",\n        status: \"error\"\n      });\n    }\n  }, [navigate, showMessage, setLoginPlayer]);\n  return {\n    login,\n    loading\n  };\n};\n\n_s(useAuth, \"WS6nbAfJVps1XXrR1qeVeh7/Uy8=\", false, function () {\n  return [useNavigate, useMessage, useLoginPlayer];\n});","map":{"version":3,"sources":["/Users/r_tomishi/Desktop/42Tokyo/ft_transcendence/LocalDevelopment/frondend/src/hooks/useAuth.ts"],"names":["useCallback","useState","axios","useNavigate","useMessage","useLoginPlayer","useAuth","navigate","showMessage","setLoginPlayer","loading","setLoading","login","name","password","get","then","res","data","title","status","catch"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAC5B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAkBJ,UAAU,EAAlC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAqBJ,cAAc,EAAzC;AAEA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,KAAK,GAAGZ,WAAW,CACxB,CAACa,IAAD,EAAeC,QAAf,KAAoC;AACnC,QAAID,IAAI,KAAK,EAAb,EAAiB;AAChBX,MAAAA,KAAK,CACHa,GADF,CACe,kCAAiCF,IAAK,EADrD,EAEEG,IAFF,CAEQC,GAAD,IAAS;AACd,YAAIA,GAAG,CAACC,IAAJ,CAASJ,QAAT,KAAsBA,QAA1B,EAAoC;AACnCL,UAAAA,cAAc,CAAC,EAAE,GAAGQ,GAAG,CAACC;AAAT,WAAD,CAAd;AACAV,UAAAA,WAAW,CAAC;AACXW,YAAAA,KAAK,EAAE,oBADI;AAEXC,YAAAA,MAAM,EAAE;AAFG,WAAD,CAAX;AAIAb,UAAAA,QAAQ,CAAC,OAAD,CAAR;AACA,SAPD,MAOO;AACNC,UAAAA,WAAW,CAAC;AACXW,YAAAA,KAAK,EAAE,yBADI;AAEXC,YAAAA,MAAM,EAAE;AAFG,WAAD,CAAX;AAIAT,UAAAA,UAAU,CAAC,KAAD,CAAV;AACA;AACD,OAjBF,EAkBEU,KAlBF,CAkBQ,MAAM;AACZb,QAAAA,WAAW,CAAC;AACXW,UAAAA,KAAK,EAAE,mDADI;AAEXC,UAAAA,MAAM,EAAE;AAFG,SAAD,CAAX;AAIAT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACA,OAxBF;AAyBA,KA1BD,MA0BO;AACNH,MAAAA,WAAW,CAAC;AACXW,QAAAA,KAAK,EAAE,+BADI;AAEXC,QAAAA,MAAM,EAAE;AAFG,OAAD,CAAX;AAIA;AACD,GAlCuB,EAmCxB,CAACb,QAAD,EAAWC,WAAX,EAAwBC,cAAxB,CAnCwB,CAAzB;AAqCA,SAAO;AACNG,IAAAA,KADM;AAENF,IAAAA;AAFM,GAAP;AAIA,CAhDM;;GAAMJ,O;UACKH,W,EACOC,U,EACGC,c","sourcesContent":["import { useCallback, useState } from \"react\";\nimport axios from \"axios\";\nimport { Player } from \"../types/api/Player\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useMessage } from \"./useMessage\";\nimport { useLoginPlayer } from \"..//hooks/useLoginPlayer\";\n\nexport const useAuth = () => {\n\tconst navigate = useNavigate();\n\tconst { showMessage } = useMessage();\n\tconst { setLoginPlayer } = useLoginPlayer();\n\n\tconst [loading, setLoading] = useState(false);\n\n\tconst login = useCallback(\n\t\t(name: string, password: string) => {\n\t\t\tif (name !== \"\") {\n\t\t\t\taxios\n\t\t\t\t\t.get<Player>(`http:///localhost:3001/players/${name}`)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tif (res.data.password === password) {\n\t\t\t\t\t\t\tsetLoginPlayer({ ...res.data });\n\t\t\t\t\t\t\tshowMessage({\n\t\t\t\t\t\t\t\ttitle: \"Sign In Successful\",\n\t\t\t\t\t\t\t\tstatus: \"success\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tnavigate(\"/home\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshowMessage({\n\t\t\t\t\t\t\t\ttitle: \"That Password is wrong.\",\n\t\t\t\t\t\t\t\tstatus: \"error\",\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(() => {\n\t\t\t\t\t\tshowMessage({\n\t\t\t\t\t\t\ttitle: \"That User Name not found or Server Error Occured.\",\n\t\t\t\t\t\t\tstatus: \"error\",\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tshowMessage({\n\t\t\t\t\ttitle: \"Input User Name and Password!\",\n\t\t\t\t\tstatus: \"error\",\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\t[navigate, showMessage, setLoginPlayer]\n\t);\n\treturn {\n\t\tlogin,\n\t\tloading,\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}